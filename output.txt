1
00:00:00,030 --> 00:00:04,680
view j/s it's a JavaScript framework for

2
00:00:02,610 --> 00:00:06,420
building front-end UIs in view you can

3
00:00:04,680 --> 00:00:07,680
start simple and then progressively add

4
00:00:06,420 --> 00:00:10,050
in the tools and features that you need

5
00:00:07,680 --> 00:00:11,790
to build a complex web application at

6
00:00:10,050 --> 00:00:13,799
its core it provides a way to build

7
00:00:11,790 --> 00:00:15,660
components that encapsulate data or

8
00:00:13,799 --> 00:00:17,430
state in your JavaScript and then

9
00:00:15,660 --> 00:00:19,500
connect that state reactively to a

10
00:00:17,430 --> 00:00:21,270
template in HTML we call these

11
00:00:19,500 --> 00:00:23,220
components declarative views because the

12
00:00:21,270 --> 00:00:25,320
same data inputs will always produce the

13
00:00:23,220 --> 00:00:27,210
same output in the visual UI when we

14
00:00:25,320 --> 00:00:29,369
declare data on this data object it

15
00:00:27,210 --> 00:00:30,960
links or binds it to the HTML on the

16
00:00:29,369 --> 00:00:32,550
template above when the value of the

17
00:00:30,960 --> 00:00:34,440
data changes the component will

18
00:00:32,550 --> 00:00:36,510
automatically rerender or in other words

19
00:00:34,440 --> 00:00:38,040
it's reactive and the framework does a

20
00:00:36,510 --> 00:00:39,719
ton of work under the hood to make sure

21
00:00:38,040 --> 00:00:41,610
that this process is performance across

22
00:00:39,719 --> 00:00:43,079
a huge component tree we can work with

23
00:00:41,610 --> 00:00:45,780
this data in the template thanks to

24
00:00:43,079 --> 00:00:48,030
views HTML based template syntax we can

25
00:00:45,780 --> 00:00:50,219
interpolate a value for expression using

26
00:00:48,030 --> 00:00:52,020
double braces and we also have a variety

27
00:00:50,219 --> 00:00:54,809
of directives to control the behavior of

28
00:00:52,020 --> 00:00:56,910
the HTML based on the data we can use VF

29
00:00:54,809 --> 00:00:58,829
to only render an element when the value

30
00:00:56,910 --> 00:01:00,600
on the right side is truthy and then we

31
00:00:58,829 --> 00:01:01,829
might have a fallback element after that

32
00:01:00,600 --> 00:01:04,140
that's only rendered when the values

33
00:01:01,829 --> 00:01:06,390
fall C with V else we can make the app

34
00:01:04,140 --> 00:01:08,310
interactive by listening to events using

35
00:01:06,390 --> 00:01:10,409
the V on directive we can listen to an

36
00:01:08,310 --> 00:01:12,119
event on an element then run some code

37
00:01:10,409 --> 00:01:13,799
to handle that event on the right side

38
00:01:12,119 --> 00:01:15,689
we can do that directly in the template

39
00:01:13,799 --> 00:01:18,090
or define a custom method and the

40
00:01:15,689 --> 00:01:19,979
components methods object the method has

41
00:01:18,090 --> 00:01:21,540
access to our reactive data and that

42
00:01:19,979 --> 00:01:23,340
means all we have to do is change the

43
00:01:21,540 --> 00:01:25,320
value of the data and the component will

44
00:01:23,340 --> 00:01:26,850
automatically rerender and that's all it

45
00:01:25,320 --> 00:01:28,799
takes to build an interactive reactive

46
00:01:26,850 --> 00:01:30,329
declarative UI component with view the

47
00:01:28,799 --> 00:01:32,460
framework is loved by developers for the

48
00:01:30,329 --> 00:01:34,680
simplicity but also its ability to scale

49
00:01:32,460 --> 00:01:36,689
up in complexity incrementally its

50
00:01:34,680 --> 00:01:38,490
plugin system allows you to easily drop

51
00:01:36,689 --> 00:01:40,920
in things like a router state management

52
00:01:38,490 --> 00:01:42,659
firebase support and more and perhaps

53
00:01:40,920 --> 00:01:44,700
best of all it's not sponsored by some

54
00:01:42,659 --> 00:01:46,140
mega corporation it's not pressured to

55
00:01:44,700 --> 00:01:47,520
push out new releases all the time and

56
00:01:46,140 --> 00:01:49,740
does a great job listening to its

57
00:01:47,520 --> 00:01:51,299
community this has been GU Jas and 100

58
00:01:49,740 --> 00:01:52,680
seconds stay tuned for a full length

59
00:01:51,299 --> 00:01:54,780
tutorial here on YouTube in the near

60
00:01:52,680 --> 00:01:56,310
future and check out my view firebase

61
00:01:54,780 --> 00:01:58,140
course on fire ship if you're ready to

62
00:01:56,310 --> 00:01:59,729
start building a full stack app thanks

63
00:01:58,140 --> 00:02:02,090
for watching and I will see you in the

64
00:01:59,729 --> 00:02:02,090
next one